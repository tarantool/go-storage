name: "Prepare test environment with Tarantool EE"
description: "Prepares test environment with Tarantool EE"

inputs:
  sdk-version:
    required: true
    type: string
  sdk-build:
    required: false
    type: string
    default: release
  sdk-gc:
    required: false
    type: string
    default: gc64
  sdk-download-token:
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Cache Tarantool SDK
      id: cache-sdk
      uses: actions/cache@v3
      with:
        path: tarantool-enterprise
        key: ${{ matrix.sdk-version }}

    - name: Download Tarantool SDK
      run: |
        ARCHIVE_NAME=tarantool-enterprise-sdk-${{ inputs.sdk-gc }}-${{ inputs.sdk-version }}.tar.gz
        ARCHIVE_PATH=$(echo ${{ inputs.sdk-version }} | sed -rn \
          's/^([0-9]+)\.([0-9]+)\.([0-9]+-){2}([a-z0-9]+-)?r[0-9]+\.([a-z]+)\.([a-z0-9_]+)$/${{ inputs.sdk-build }}\/\5\/\6\/\1\.\2/p')
          curl -O -L \
            https://${{ inputs.sdk-download-token }}@download.tarantool.io/enterprise/${ARCHIVE_PATH}/${ARCHIVE_NAME}
          if [ $(stat -c%s "${ARCHIVE_NAME}") -eq 0 ]; then
            echo "Failed to download Tarantool EE SDK: '${ARCHIVE_PATH}/${ARCHIVE_NAME}'"
            exit 1
          fi
          tar -xzf ${ARCHIVE_NAME}
          rm -f ${ARCHIVE_NAME}
          source tarantool-enterprise/env.sh
      shell: bash

    - name: Add SDK to PATH and set TARANTOOL_SDK_PATH variable
      run: |
        SDK_PATH="$(realpath tarantool-enterprise)"
        echo "${SDK_PATH}" >> ${GITHUB_PATH}
        echo "TARANTOOL_SDK_PATH=${SDK_PATH}" >> ${GITHUB_ENV}
      shell: bash
